// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const L2ToL2CrossDomainMessengerStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L2/L2ToL2CrossDomainMessenger.sol:L2ToL2CrossDomainMessenger\",\"label\":\"successfulMessages\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_mapping(t_bytes32,t_bool)\"},{\"astId\":1001,\"contract\":\"src/L2/L2ToL2CrossDomainMessenger.sol:L2ToL2CrossDomainMessenger\",\"label\":\"msgNonce\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint240\"}],\"types\":{\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_mapping(t_bytes32,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_bool\"},\"t_uint240\":{\"encoding\":\"inplace\",\"label\":\"uint240\",\"numberOfBytes\":\"30\"}}}"

var L2ToL2CrossDomainMessengerStorageLayout = new(solc.StorageLayout)

var L2ToL2CrossDomainMessengerDeployedBin = "0x608060405260043610610079575f3560e01c8063b1b1b2091161004c578063b1b1b20914610177578063b1f35f2c146101b5578063c155fa65146101f6578063ecc7042814610215575f80fd5b806314525bce1461007d57806335e5ef03146100e45780633f827a5a1461013c5780637056f41f14610162575b5f80fd5b348015610088575f80fd5b506100af7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6040517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100ef575f80fd5b506101177f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100db565b348015610147575f80fd5b5061014f5f81565b60405161ffff90911681526020016100db565b61017561017036600461060a565b610249565b005b348015610182575f80fd5b506101a561019136600461068c565b5f6020819052908152604090205460ff1681565b60405190151581526020016100db565b3480156101c0575f80fd5b506101e87fb83444d07072b122e2e72a669ce32857d892345c19856f4e7142d06a167ab3f381565b6040519081526020016100db565b348015610201575f80fd5b506101756102103660046106d0565b6103b8565b348015610220575f80fd5b506001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166101e8565b468403610254575f80fd5b5f8461027f6001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b338634878760405160240161029a979695949392919061081f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc155fa65000000000000000000000000000000000000000000000000000000001790525190915061032790869086908690869086906108d8565b60405180910390a0600180547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905f61035e8361092b565b91906101000a8154817dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146103f9575f80fd5b3073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663938b5f326040518163ffffffff1660e01b8152600401602060405180830381865afa158015610479573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049d919061098c565b73ffffffffffffffffffffffffffffffffffffffff16146104bc575f80fd5b4686146104c7575f80fd5b3073ffffffffffffffffffffffffffffffffffffffff8416036104e8575f80fd5b5f868686868686604051602001610504969594939291906109ae565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020928301205f8181529283905291205490915060ff1615610554575f80fd5b847fb83444d07072b122e2e72a669ce32857d892345c19856f4e7142d06a167ab3f35d5f610584855a86866105ce565b90508061058f575f80fd5b505f90815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505050505050565b5f805f80845160208601878a8af19695505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610607575f80fd5b50565b5f805f806060858703121561061d575f80fd5b84359350602085013561062f816105e6565b9250604085013567ffffffffffffffff8082111561064b575f80fd5b818701915087601f83011261065e575f80fd5b81358181111561066c575f80fd5b88602082850101111561067d575f80fd5b95989497505060200194505050565b5f6020828403121561069c575f80fd5b5035919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f805f805f8060c087890312156106e5575f80fd5b863595506020870135945060408701356106fe816105e6565b9350606087013561070e816105e6565b92506080870135915060a087013567ffffffffffffffff80821115610731575f80fd5b818901915089601f830112610744575f80fd5b813581811115610756576107566106a3565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561079c5761079c6106a3565b816040528281528c60208487010111156107b4575f80fd5b826020860160208301375f6020848301015280955050505050509295509295509295565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b8781528660208201525f73ffffffffffffffffffffffffffffffffffffffff808816604084015280871660608401525084608083015260c060a083015261086a60c0830184866107d8565b9998505050505050505050565b5f81518084525f5b8181101561089b5760208185018101518683018201520161087f565b505f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b85815273ffffffffffffffffffffffffffffffffffffffff85166020820152608060408201525f61090d6080830185876107d8565b828103606084015261091f8185610877565b98975050505050505050565b5f7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808316818103610982577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6001019392505050565b5f6020828403121561099c575f80fd5b81516109a7816105e6565b9392505050565b8681528560208201525f73ffffffffffffffffffffffffffffffffffffffff808716604084015280861660608401525083608083015260c060a083015261091f60c083018461087756fea164736f6c6343000818000a"


func init() {
	if err := json.Unmarshal([]byte(L2ToL2CrossDomainMessengerStorageLayoutJSON), L2ToL2CrossDomainMessengerStorageLayout); err != nil {
		panic(err)
	}

	layouts["L2ToL2CrossDomainMessenger"] = L2ToL2CrossDomainMessengerStorageLayout
	deployedBytecodes["L2ToL2CrossDomainMessenger"] = L2ToL2CrossDomainMessengerDeployedBin
	immutableReferences["L2ToL2CrossDomainMessenger"] = true
}
